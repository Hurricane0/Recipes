{"version":3,"sources":["components/recipe.module.css","components/ModeButton.module.css","components/Search.jsx","components/Recipe.jsx","components/ModeButton.jsx","App.js","index.js"],"names":["module","exports","submitSearch","search","setSearch","mode","className","value","placeholder","onChange","e","target","onClick","title","calories","image","ingredients","s","recipe","light_recipe","dark_recipe","src","alt","style","textAlign","Math","round","map","ingredient","key","text","weight","toggleMode","Provider","color","size","button_container","light","dark","App","useState","isLoading","setIsLoading","recipes","setRecipes","query","setQuery","setMode","useEffect","localMode","localStorage","getItem","setItem","getRecipes","a","fetch","response","json","data","hits","Search","preventDefault","Recipe","label","ModeButton","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ddae1350.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__1ThJq\",\"image\":\"recipe_image__9rE-l\",\"light_recipe\":\"recipe_light_recipe__2YSCS\",\"dark_recipe\":\"recipe_dark_recipe__1ctx0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button_container\":\"ModeButton_button_container__3pD0Z\",\"light\":\"ModeButton_light__2yreJ\",\"dark\":\"ModeButton_dark__3gnNT\"};","import React from \"react\";\r\n\r\nexport default ({ submitSearch, search, setSearch, mode }) => (\r\n  <div className={`search_form`}>\r\n    <form className=\"form\">\r\n      <input\r\n        value={search}\r\n        className={`search_bar ${\r\n          mode ? \"light_search_bar\" : \"dark_search_bar\"\r\n        }`}\r\n        placeholder=\"Search for some yummy\"\r\n        onChange={e => setSearch(e.target.value)}\r\n      />\r\n      <button\r\n        className={`search_button ${\r\n          mode ? \"light_search_button\" : \"dark_search_button\"\r\n        }`}\r\n        onClick={submitSearch}\r\n      >\r\n        Search\r\n      </button>\r\n    </form>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport s from \"./recipe.module.css\";\r\n\r\nexport default ({ title, calories, image, ingredients, mode }) => (\r\n  <div className={`${s.recipe}  ${mode ? s.light_recipe : s.dark_recipe}`}>\r\n    <img className={s.image} src={image} alt=\"Food\" />\r\n    <h1 style={{ textAlign: \"center\" }}>{title}</h1>\r\n    <strong>Calories: {Math.round(calories)}</strong>\r\n    <ul>\r\n      {ingredients.map(ingredient => (\r\n        <li key={ingredient.text + ingredient.weight}>{ingredient.text}</li>\r\n      ))}\r\n    </ul>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport s from \"./ModeButton.module.css\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { FaRegMoon } from \"react-icons/fa\";\r\nimport { FiSun } from \"react-icons/fi\";\r\n\r\nexport default ({ toggleMode, mode }) => (\r\n  <IconContext.Provider\r\n    value={{\r\n      color: `${mode ? \"#3f3f3f\" : \"#757575\"}`,\r\n      className: \"global-class-name\",\r\n      size: `${mode ? \"25px\" : \"20px\"}`\r\n    }}\r\n  >\r\n    <div\r\n      onClick={toggleMode}\r\n      className={`${s.button_container} ${mode ? s.light : s.dark}`}\r\n    >\r\n      {mode ? <FiSun /> : <FaRegMoon />}\r\n    </div>\r\n  </IconContext.Provider>\r\n);\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Search from \"./components/Search\";\nimport Recipe from \"./components/Recipe\";\nimport ModeButton from \"./components/ModeButton\";\n\nfunction App() {\n  const ID = \"0d5cc5d4\";\n  const KEY = \"7dc40ea0fb8947cd4f15771445c2d3f1\";\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [recipes, setRecipes] = useState(null);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"chicken\");\n  const [mode, setMode] = useState(true);\n\n  useEffect(() => {\n    const localMode = localStorage.getItem(\"mode\");\n    setMode(localMode === \"true\" ? true : false);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"mode\", mode);\n  }, [mode]);\n\n  useEffect(() => {\n    getRecipes();\n    // eslint-disable-next-line\n  }, [query]);\n\n  const submitSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch(\"\");\n  };\n\n  const getRecipes = async () => {\n    setIsLoading(true);\n    const response = await fetch(\n      `https://api.edamam.com/search?q=${query}&app_id=${ID}&app_key=${KEY}&from=0&to=3&calories=591-722&health=alcohol-free`\n    );\n    const data = await response.json();\n    setRecipes(data.hits);\n    setIsLoading(false);\n  };\n\n  const toggleMode = () => {\n    setMode(!mode);\n  };\n  return (\n    <div className={`App ${mode ? \"light_app\" : \"dark_app\"}`}>\n      <Search\n        search={search}\n        submitSearch={submitSearch}\n        setSearch={setSearch}\n        mode={mode}\n      />\n      <div className={\"recipes\"}>\n        {!isLoading ? (\n          recipes.map(recipe => (\n            <Recipe\n              key={recipe.recipe.label + recipe.recipe.calories}\n              title={recipe.recipe.label}\n              calories={recipe.recipe.calories}\n              image={recipe.recipe.image}\n              ingredients={recipe.recipe.ingredients}\n              mode={mode}\n            />\n          ))\n        ) : (\n          <span>Loading...</span>\n        )}\n      </div>\n      <ModeButton mode={mode} toggleMode={toggleMode} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}